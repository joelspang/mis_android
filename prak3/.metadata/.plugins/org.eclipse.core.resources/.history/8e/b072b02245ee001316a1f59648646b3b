package mis.examples.doodle;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.provider.BaseColumns;
import mis.examples.doodle.model.Poll;

public class PollDataHelper {
		
		
	public static void addPoll(Poll poll) {
		
	}
	
	
	private class PollDataDBHelper extends SQLiteOpenHelper {

		public static final int DATABASE_VERSION = 1;
	    public static final String DATABASE_NAME = "FeedReader.db";
		
	    /* Schema definition */
	    public static abstract class PollEntry implements BaseColumns {
	        public static final String TABLE_NAME 				= "polls";
	        public static final String COLUMN_NAME_ID 			= "id";
	        public static final String COLUMN_NAME_TITLE 		= "title";
	        public static final String COLUMN_NAME_DESCRIPTION 	= "description";
	        public static final String COLUMN_NAME_DOODLEKEY 	= "doodlekey";
	    }
	    
	    /* Queries */
	    private static final String SQL_CREATE_TABLE = 
	    	"CREATE TABLE " + PollEntry.TABLE_NAME + " ( " +
	    	PollEntry.COLUMN_NAME_ID + " VARCHAR(32) NOT NULL," + 
	    	PollEntry.COLUMN_NAME_TITLE + " VARCHAR(255) NOT NULL," + 
	    	PollEntry.COLUMN_NAME_DESCRIPTION + " VARCHAR(255) NOT NULL," +
	    	PollEntry.COLUMN_NAME_DOODLEKEY + " VARCHAR(8) NOT NULL" + 
	    	" )";

		private static final String SQL_DELETE_TABLE =
		    "DROP TABLE IF EXISTS " + PollEntry.TABLE_NAME;

	    
	    
		public PollDataDBHelper(Context context) {
		    super(context, DATABASE_NAME, null, DATABASE_VERSION);
	    }
	    public void onCreate(SQLiteDatabase db) {
	        db.execSQL(PollEnty.);
	    }
	    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
	        // This database is only a cache for online data, so its upgrade policy is
	        // to simply to discard the data and start over
	        db.execSQL(SQL_DELETE_ENTRIES);
	        onCreate(db);
	    }
	    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
	        onUpgrade(db, oldVersion, newVersion);
	    }
		
	}
}
